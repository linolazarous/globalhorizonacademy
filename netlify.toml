[build]
  publish = "build"
  functions = "netlify/functions"
  command = "npm run build"

[build.environment]
  NODE_VERSION = "18"
  NODE_ENV = "production"

[functions]
  node_bundler = "esbuild"
  external_node_modules = [
    "firebase", 
    "@stripe/stripe-js", 
    "openai", 
    "jsonwebtoken", 
    "crypto", 
    "axios"
  ]
  included_files = [
    "netlify/functions/**/*.js",
    "netlify/functions/**/*.json"
  ]
  # Timeout settings
  timeout = 30  # seconds

[[headers]]
  for = "/api/*"
  [headers.values]
    Access-Control-Allow-Origin = "*"
    Access-Control-Allow-Methods = "GET, POST, PUT, DELETE, OPTIONS"
    Access-Control-Allow-Headers = "Content-Type, Authorization, X-Requested-With"
    X-Frame-Options = "DENY"
    X-XSS-Protection = "1; mode=block"
    X-Content-Type-Options = "nosniff"

[[headers]]
  for = "/.well-known/*"
  [headers.values]
    Access-Control-Allow-Origin = "*"

# Environment variables
[context.production.environment]
  STRIPE_SECRET_KEY = "@stripe_secret_key"
  OPENAI_API_KEY = "@openai_api_key"
  JWT_SECRET = "@jwt_secret"
  FIREBASE_CONFIG = "@firebase_config"
  SENTRY_DSN = "@sentry_dsn"

[context.deploy-preview.environment]
  NODE_ENV = "staging"
  STRIPE_SECRET_KEY = "@stripe_test_secret_key"

[context.branch-deploy.environment]
  NODE_ENV = "staging"
  STRIPE_SECRET_KEY = "@stripe_test_secret_key"

# Redirects for SPA
[[redirects]]
  from = "/*"
  to = "/index.html"
  status = 200

# Security headers
[[headers]]
  for = "/*"
  [headers.values]
    X-Frame-Options = "DENY"
    X-XSS-Protection = "1; mode=block"
    X-Content-Type-Options = "nosniff"
    Referrer-Policy = "strict-origin-when-cross-origin"
    Permissions-Policy = "geolocation=(), microphone=(), camera=()"

# Cache optimization
[[headers]]
  for = "/static/*"
  [headers.values]
    Cache-Control = "public, max-age=31536000, immutable"

[[headers]]
  for = "/sw.js"
  [headers.values]
    Cache-Control = "no-cache, no-store, must-revalidate"

# Image optimization
[[headers]]
  for = "/*.jpg"
  [headers.values]
    Cache-Control = "public, max-age=31536000"

[[headers]]
  for = "/*.png"
  [headers.values]
    Cache-Control = "public, max-age=31536000"

[[headers]]
  for = "/*.webp"
  [headers.values]
    Cache-Control = "public, max-age=31536000"

# Function-specific configuration
[functions."generate-course"]
  timeout = 60  # Longer timeout for AI operations

[functions."create-payment-intent"]
  timeout = 30

[functions."stripe-webhook"]
  timeout = 10
